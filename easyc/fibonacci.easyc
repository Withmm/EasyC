Int: int Identifier: fibonacci Delimiter: ( Int: int Identifier: n Delimiter: ) Delimiter: { 
Int: int Identifier: left Operator: = Constant: 1 Delimiter: ; 
Int: int Identifier: right Operator: = Constant: 1 Delimiter: ; 
Keyword: for Delimiter: ( Int: int Identifier: i Operator: = Constant: 0 Delimiter: ; Identifier: i Operator: < Identifier: n Operator: - Constant: 1 Delimiter: ; Identifier: i Operator: = Identifier: i Operator: + Constant: 1 Delimiter: ) Delimiter: { 
Int: int Identifier: tmp Operator: = Identifier: left Operator: + Identifier: right Delimiter: ; 
Identifier: left Operator: = Identifier: right Delimiter: ; 
Identifier: right Operator: = Identifier: tmp Delimiter: ; 
Delimiter: } 
Keyword: return Identifier: left Delimiter: ; 
Delimiter: } 
Int: int Identifier: main Delimiter: ( Delimiter: ) Delimiter: { 
Int: int Identifier: x Operator: = Identifier: fibonacci Delimiter: ( Constant: 5 Delimiter: ) Delimiter: ; 
Keyword: return Identifier: x Delimiter: ; Delimiter: } 
1: (=, 1, _, t1)
2: (=, t1, _, t0)
3: (=, t0, _, left)
4: (=, 1, _, t4)
5: (=, t4, _, t3)
6: (=, t3, _, right)
7: (=, 0, _, t7)
8: (=, t7, _, t6)
9: (=, t6, _, i)
10: (=, i, _, t11)
11: (=, t11, _, t9)
12: (=, a0, _, t13)
13: (=, 1, _, t15)
14: (-, t13, t15, t10)
15: (j>=, t9, t10, 31)
16: (=, left, _, t18)
17: (=, right, _, t20)
18: (+, t18, t20, t17)
19: (=, t17, _, tmp)
20: (=, right, _, t23)
21: (=, t23, _, t22)
22: (=, 0, _, left)
23: (=, tmp, _, t26)
24: (=, t26, _, t25)
25: (=, 0, _, right)
26: (=, i, _, t29)
27: (=, 1, _, t31)
28: (+, t29, t31, t28)
29: (=, t28, _, i)
30: (j, _, _, 10)
31: (=, left, _, t34)
32: (=, t34, _, t33)
33: (=, t33, _, a7)
34: (ret, _, _, _)
35: (=, 5, _, t40)
36: (=, t40, _, t39)
37: (=, t39, _, a0)
38: (j, _, _, 1)
39: (=, a7, _, t38)
40: (=, t38, _, t37)
41: (=, t37, _, t36)
42: (=, t36, _, x)
43: (=, x, _, t43)
44: (=, t43, _, t42)
45: (=, t42, _, a7)
46: (ret, _, _, _)
